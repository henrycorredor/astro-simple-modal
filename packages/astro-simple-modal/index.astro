---
interface Props {
	modalId: string | number
	title?: string
}

const {modalId, title} = Astro.props
---
<div id={`astro-simple-modal-${modalId}`} class="modal modal__container hide fixed top-0 left-0 right-0 bottom-0 z-30">
	<div class="modal__content rounded-2xl p-8 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 max-w-3xl">
		<div class="modal__header flex justify-between mb-2">
			{title && (
				<div class="modal__header__title text-2xl">
					{title}
				</div>
			)}
			<div class="modal__header__close ml-auto flex items-center">
				<button id=`modal-${modalId}-close-button` class="modal_close-button" type="button">
					<span class="hidden">Cerrar</span>
				</button>
			</div>
		</div>
		<div class="modal__body">
			<slot/>
		</div>
	</div>
	<div id={`modal-background-${modalId}`} class="modal__background fixed top-0 left-0 right-0 bottom-0">
	</div>
</div>

<script>
	function handleToggle(modalId: string) {
		const container = document.querySelector(`#modal-${modalId}`);

		if (container) {
			if (container.classList.contains('hide')) {
				container.classList.remove('hide')
				container.classList.add('prepare')
				setTimeout(() => {
					container.classList.add('show')
				}, 30)
			} else {
				container.classList.remove('show')
				setTimeout(() => {
					container.classList.remove('prepare')
					container.classList.add('hide')
				}, 30)
			}
		}
	}

	window.addEventListener('toggle-modal', (event) => {
		const {modalId} = (event as CustomEvent<{modalId: string}>).detail
		handleToggle(modalId)
	})
</script>

<style lang="less">
  .modal {
    transition: opacity .3s;

    &__header__close button {
      width: 30px;
      height: 30px;
      background: url("/assets/product-pic-gallery-icons.svg") no-repeat;
    }

    &__content {
      height: fit-content;
      max-height: 90vh;
      min-height: fit-content;
      background: white;
      z-index: 100;
    }

    &__background {
      background-color: rgba(0, 0, 0, 0.46);
      z-index: 0;
    }

    &.hide {
      display: none;
    }

    &.prepare {
      opacity: 0;

      &.show {
        opacity: 1;
      }
    }
  }
</style>

<script define:vars={{modalId}}>
	const closeModal = new CustomEvent("toggle-modal", {
		detail: {modalId}
	})
	document.querySelectorAll(
		`#modal-${modalId}-close-button, #modal-background-${modalId}`
	)?.forEach(e => e.addEventListener("click", () => {
		window.dispatchEvent(closeModal);
	}))
</script>