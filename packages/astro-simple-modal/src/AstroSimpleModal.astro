---
interface Props {
  id: string | number
  styles?: {
    backgroundOpacity?: number
    transitionDuration?: string
    backgroundColor?: string
    contentBackgroundColor?: string
    contentPadding?: string
    borderRadius?: string
    color?: string
    zIndex?: number
  }
}

const {
  id,
  styles: {
    backgroundOpacity = 0.5,
    transitionDuration = '.3s',
    backgroundColor = 'black',
    contentBackgroundColor = 'white',
    contentPadding = '1rem 1.5rem',
    borderRadius = '.5rem',
    color = 'unset',
    zIndex = 100
  } = {}
} = Astro.props
---
<div id={`simple-modal-${id}`} class="simple-modal modal-full-screen hide">
  <div class="simple-modal-content">
    <slot/>
  </div>
  <div id={`simple-modal-${id}-background`} class="simple-modal-background modal-full-screen"></div>
</div>

<style is:global>
  .modal-full-screen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .simple-modal.hide {
    display: none;
  }

  .simple-modal.fade,
  .simple-modal.fade.show {
    opacity: 0;
  }

  .simple-modal.show {
    opacity: 1;
  }

  .simple-modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    height: fit-content;
    min-height: fit-content;
    transform: translate(-50%, -50%);
    z-index: 1;
  }

  .simple-modal-background {
    position: fixed;
    z-index: 0;
  }
</style>

<style define:vars={{
  backgroundOpacity,
  transitionDuration,
  backgroundColor,
  contentBackgroundColor,
  contentPadding,
  borderRadius,
  color,
  zIndex
}}>
  .simple-modal {
    color: var(--color);
    transition: opacity var(--transitionDuration);
    z-index: var(--zIndex);
  }

  .simple-modal-content {
    background: var(--contentBackgroundColor);
    padding: var(--contentPadding);
    border-radius: var(--borderRadius);
  }

  .simple-modal-background {
    background-color: var(--backgroundColor);
    opacity: var(--backgroundOpacity);
  }
</style>

<script define:vars={{modalId: id}}>
  const modal = document.querySelector(`#simple-modal-${modalId}`)
  if (modal) {
    modal.addEventListener("transitionend", (event) => {
      const {target} = event;
      if (Array.from(target.classList).includes('fade-out')) {
        target.classList.remove('fade', 'show', 'fade-out')
        target.classList.add('hide')
      }
    })

    document.querySelector(`#simple-modal-${modalId}-background`)?.addEventListener('click', () => {
      modal.classList.add('fade', 'fade-out')
    })
  }
</script>